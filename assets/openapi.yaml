openapi: "3.0.0"
info:
  version: "0.1.0"
  title: "Squill Agent REST API"
  description: The REST API used by the Squill Client to interact with the Agent.

paths:
  /query:
    get:
      summary: Execute a query
      description: Execute a query on the database.
      responses:
        "200":
          description: The query was executed successfully.

components:
  schemas:
    Username:
      description: A username
      type: string

    QueryExecutionStatus:
      description: The status of a query execution.
      type: string
      enum:
        - pending
        - running
        - completed
        - failed

    QueryExecutionError:
      description: An error message from a query execution.
      type: object
      properties:
        message:
          type: string
        line:
          type: number
          format: int32
          minimum: 0
        column:
          type: number
          format: int32
          minimum: 0

    QueryExecution:
      description: The execution of a query.
      type: object
      required:
        - id
      properties:
        id:
          description: The unique identifier of the query execution.
          type: string
          format: uuid
        connection_id:
          type: string
          format: uuid
        query:
          type: string
        status:
          $ref: "#/components/schemas/QueryExecutionStatus"
        error:
          $ref: "#/components/schemas/QueryExecutionError"
        executed_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        affected_rows:
          description: The number of rows affected by the query.
          type: number
          format: int64
          minimum: 0
        execution_time:
          description: |
            The time it took to execute the query in seconds.

            The time is captured in nanoseconds and converted to seconds using a 64-bit floating-point allowing for
            high precision on fast queries without loosing the ability to represent long running queries in seconds.
            This decision was made to keep that field usable in Javascript where the number type is a 64-bit 
            floating-point but can only represent integers up to 2^53 - 1 which would be only 2.5 hours in nanoseconds 
            before starting to loose precision. In addition seconds are more user friendly than nanoseconds.
          type: number
          format: double
          minimum: 0
